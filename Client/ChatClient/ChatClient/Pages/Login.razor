@page "/login"
@namespace LoginComponent
@using Microsoft.AspNetCore.Components.Authorization
@using Models.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime;

<div class="loginForm">
    <AuthorizeView>
        <NotAuthorized>
            <div class="loginWrapper">
                <h3>Login</h3>
                <label class="username">Username</label>
                <input class="InputUsername" type="text" @bind-value="@username"/>
                <label class="password">Password</label>
                <input class="InputPassword" type="password" @bind-value="@password"/>
                <label class="errorMessage">@errorMessage</label>
                <div>
                    <button @onclick="@LoginRequest" class="LoginButton">Login</button>
                </div>
                <div>

                    Not registred? <a @onclick="@Register" href="#">Sign up now</a>
                </div>
            </div>
        </NotAuthorized>
        <Authorized>
            <div class="container">
                <div class="row d-flex justify-content-center">
                    <button class="logoutButton" @onclick="@((() => GoToHub()))">
                        Go to Hub
                    </button>
                    <button class="logoutButton" @onclick="@((() => Logout()))">
                        Log out
                    </button>
                </div>

            </div>
        </Authorized>
    </AuthorizeView>
</div>

@code {
    private string username;
    private string password;
    private string errorMessage = "";

    private async Task LoginRequest()
    {
        errorMessage = "";
        try
        {
            await ((AuthenticationProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            navigation.NavigateTo("Main");
        }
        catch (Exception e)
        {

            errorMessage = e.Message;
        }
        password = "";
    }

    private async Task Register()
    {
        navigation.NavigateTo("Register", true);
    }

    private async Task Logout()
    {
        try
        {
            ((AuthenticationProvider) AuthenticationStateProvider).Logout();
            navigation.NavigateTo("login");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

    private void GoToHub()
    {
        navigation.NavigateTo("main");
    }

}