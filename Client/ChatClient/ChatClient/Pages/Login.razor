@page "/login"
@namespace LoginComponent
@using Microsoft.AspNetCore.Components.Authorization
@using Application.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigation;
<div class = "loginForm">
<AuthorizeView>
    <NotAuthorized>
        <div class = "loginWrapper">
            <h3>Login</h3>
            <label class="username">Username</label>
            <input class="InputUsername" type="text" @bind-value="@username"/>
            <label class="password">Password</label>
        <input class = "InputPassword" type="password" @bind-value="@password"/>
            <label class = "errorMessage">@errorMessage</label>
            <div>
                <button @onclick="@LoginRequest" class="LoginButton">Login</button>
            </div>
            <div>
                
               Not registred? <a @onclick="@register" href="#">Sign up now</a>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>
</div>
@code {
    private string username;
    private string password;
    private string errorMessage = "";

    public async Task LoginRequest()
    {
        errorMessage = "";
        try
        {
            await ((AuthenticationProvider)AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            navigation.NavigateTo("Main");
        }
        catch (Exception e)
        {
            //Console.Out.WriteLine("error");
            errorMessage = e.Message;
            
        }
        password = "";
    }

    public async Task register()
    {
        navigation.NavigateTo("Register", true);
    }
        
}