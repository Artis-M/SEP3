@page "/Register"
@using Application.Models
@using global::Models
@using MongoDB.Bson
@using Services
@inject IAccountService AccountService;
@inject NavigationManager NavigationManager;

<div class="SignUpWrapper">

    <EditForm Model="@newAccount" OnValidSubmit="@RegisterNewAccount">
    <DataAnnotationsValidator/>
        <div class = "SignUpForm">
        <h3>Sign Up</h3>
        <div class="form-group">
            E-mail: <br/>
            <InputText  @bind-Value="newAccount.email"/>
             <div class="validate_div">
                            <ValidationMessage For="@(() => newAccount.email)"/>
                            </div>
        </div>
        <div class="form-group">
            Username: <br/>
            <InputText  @bind-Value="newAccount.Username"/>
            <div class="validate_div validate_div_username">
                <ValidationMessage For="@(() => error)"/>
                <ValidationMessage For="@(() => newAccount.Username)"/>
            </div>
        </div>

        <div class="form-group">
            First name:<br/>
            <InputText  @bind-Value="newAccount.Fname"/>
             <div class="validate_div">
                            <ValidationMessage For="@(() => newAccount.Fname)"/>
                            </div>
        </div>
        <div class="form-group">
            Last name:<br/>
            <InputText  rows="1"cols="50" @bind-Value="newAccount.Lname"/>
             <div class="validate_div">
                            <ValidationMessage For="@(() => newAccount.Lname)"/>
                            </div>
        </div>

            <div class="form-group">
                Password:<br/>
                <InputText type="password"  rows="1"cols="50" @bind-Value="newAccount.Pass"/>
                 <div class="validate_div">
                                <ValidationMessage For="@(() => newAccount.Pass)"/>
                                </div>
            </div>
            <div class="SignUpButton">
                <button  type="submit">Sign Up</button>
            </div>
            <div>
                            
                           Already have an account? <a @onclick="@RedirectLogin" href="#">Sign in</a>
                        </div>
        
        </div>
    </EditForm>
</div>

@code {
    private string error = "";
    private Account newAccount=new Account();

    private void RegisterNewAccount()
    {
        try
        {
            newAccount.role = "User";
            newAccount._id = ObjectId.GenerateNewId().ToString();
            newAccount.friends = new List<User>();
            newAccount.topics= new List<Topic>();
            AccountService.Register(newAccount);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            error = e.Message;
        }
        
      // NavigationManager.NavigateTo("login", true);
    }

    private void RedirectLogin()
    {
        NavigationManager.NavigateTo("login", true);
    }

}